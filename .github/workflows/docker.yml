name: Build and Publish stac-browser image

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: ghcr.io
  STAC_BROWSER_REPO: radiantearth/stac-browser

jobs:
  build-and-push:
    permissions:
      packages: write
      
    strategy:
      matrix:
        variant: 
          - id: "default"
          - id: "prefix"
            build-arg: "pathPrefix=/browser/"
        flavor: ["edge", "release"]
        exclude:
          - variant:
              - id: "default"
          - flavor: "release"


    runs-on: ubuntu-latest
    env:
      FLAVORED_IMAGE_NAME: $REGISTRY/stac-browser${{matrix.variant.tag-suffix}}:${{matrix.flavor}}
    steps:
      - name: install skopeo
        run: |
          apt update
          apt install -y skopeo

      - name: Set env vars
        run: |
          if [${{matrix.variant.id}} == "prefix"]; then
            SUFFIX="-prefix"
          else
            SUFFIX=""
          fi
          PACKAGE_NAME=stac-browser$SUFFIX
          NAMESPACED_PACKAGE_NAME=alekzvik/$PACKAGE_NAME
          IMAGE_NAME=${{env.REGISTRY}}/$PACKAGE_NAME

          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "NAMESPACED_PACKAGE_NAME=$NAMESPACED_PACKAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "FLAVORED_IMAGE_NAME=$IMAGE_NAME:${{matrix.flavor}}" >> $GITHUB_ENV

          echo "PACKAGE_NAME=$PACKAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME"
          echo "FLAVORED_IMAGE_NAME=$IMAGE_NAME:${{matrix.flavor}}"

      - name: Checkout stac-browser repo
        uses: actions/checkout@v4
        with:
          repository: ${{env.STAC_BROWSER_REPO}}
          ref: main
          path: stac-browser-repo
          fetch-depth: 0

      - name: Extract repo metadata
        id: repo-metadata
        working-directory: stac-browser-repo
        run: |
          LAST_COMMIT=$(git rev-parse HEAD)

          LAST_TAG_COMMIT=$(git rev-list --tags --max-count=1)
          LAST_TAG=$(git describe --tags $LAST_TAG_COMMIT)

          echo "last_commit=$LAST_COMMIT" >> $GITHUB_OUTPUT
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT
          echo "last_tag_commit=$LAST_TAG_COMMIT" >> $GITHUB_OUTPUT

          echo "last_commit=$LAST_COMMIT"
          echo "last_tag=$LAST_TAG"
          echo "last_tag_commit=$LAST_TAG_COMMIT"

      - name: Extract last built image
        run: |
          skopeo inspect docker://${{ env.FLAVOURED_IMAGE_NAME }} | jq '.'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta - edge
        if: ${{matrix.flavor}} == edge
        id: meta-edge
        uses: docker/metadata-action@v5
        with:
          images: ${{env.IMAGE_NAME}}
          tags: |
            type=edge
          annotations: |
            org.opencontainers.image.revision=${{steps.repo-metadata.outputs.last_commit}}
            org.opencontainers.image.source=https://github.com/${{env.STAC_BROWSER_REPO}}
            org.opencontainers.image.title=${{ env.PACKAGE_NAME }}

      - name: Docker meta - release
        if: ${{matrix.flavor}} == release
        id: meta-release
        uses: docker/metadata-action@v5
        with:
          images: ${{env.IMAGE_NAME}}
          tags: |
            type=semver,pattern={{version}},value=${{steps.repo-metadata.outputs.last_tag}}
          annotations: |
            org.opencontainers.image.title=${{ env.PACKAGE_NAME }}
            org.opencontainers.image.revision=${{steps.repo-metadata.outputs.last_tag_commit}}
            org.opencontainers.image.source=https://github.com/${{env.STAC_BROWSER_REPO}}

      - name: Build and push image - edge
        id: push-edge
        if: ${{matrix.flavor}} == edge
        uses: docker/build-push-action@v5
        with:
          context: stac-browser-repo
          push: true
          build-args: ${{ matrix.variant.build-arg }}
          tags: ${{steps.meta-edge.outputs.tags}}
          labels: ${{steps.meta-edge.outputs.annotations}}
          annotations: ${{steps.meta-edge.outputs.annotations}}
          cache-from: type=gha
          cache-to: type=gha,mode=max  

      - name: Build and push image - release
        id: push-release
        if: ${{matrix.flavor}} == release
        uses: docker/build-push-action@v5
        with:
          context: stac-browser-repo
          push: true
          build-args: ${{ matrix.variant.build-arg }}
          tags: ${{steps.meta-release.outputs.tags}}
          labels: ${{steps.meta-release.outputs.annotations}}
          annotations: ${{steps.meta-release.outputs.annotations}}
          cache-from: type=gha
          cache-to: type=gha,mode=max  
