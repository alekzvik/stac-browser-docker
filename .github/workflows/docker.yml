name: Publish stac-browser image

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: ghcr.io
  STAC_BROWSER_REPO: radiantearth/stac-browser
  IMAGE_NAME: ghcr.io/alekzvik/stac-browser-prefix

jobs:
  extract-meta:
    runs-on: ubuntu-latest
    outputs:
      last_tag: ${{steps.pick.outputs.release_tag}}
      last_commit: ${{steps.pick.outputs.release_commit}}
    steps:
      - name: install skopeo
        run: |
          sudo apt update
          sudo apt install -y skopeo

      - name: Checkout stac-browser repo
        uses: actions/checkout@v4
        with:
          repository: ${{env.STAC_BROWSER_REPO}}
          ref: main
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract repo metadata
        id: repo-meta
        run: |
          LAST_COMMIT=$(git rev-parse HEAD)

          LAST_TAG_COMMIT=$(git rev-list --tags --max-count=1)
          LAST_TAG=$(git describe --tags $LAST_TAG_COMMIT)

          echo "last_commit=$LAST_COMMIT" >> $GITHUB_OUTPUT
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT
          echo "last_tag_commit=$LAST_TAG_COMMIT" >> $GITHUB_OUTPUT

          echo "last_commit=$LAST_COMMIT"
          echo "last_tag=$LAST_TAG"
          echo "last_tag_commit=$LAST_TAG_COMMIT"
      
      - name: Extract package metadata
        id: package-meta
        continue-on-error: true
        run: |
          LATEST_TAG_COMMIT=$(skopeo inspect docker://${{ env.IMAGE_NAME }}:latest | jq '.Labels."org.opencontainers.image.revision"')
          LATEST_COMMIT=$(skopeo inspect docker://${{ env.IMAGE_NAME }}:edge | jq '.Labels."org.opencontainers.image.revision"')
          
          echo "package_last_tag_commit=$LATEST_TAG_COMMIT" >> $GITHUB_OUTPUT
          echo "package_last_commit=$LATEST_TAG_COMMIT" >> $GITHUB_OUTPUT

      - name: Pick what to do
        id: pick
        run: |
          if [[ "${{ steps.package-meta.outputs.package_last_commit }}" != "${{ steps.repo-meta.outputs.last_commit }}" ]]; then
            echo "release_tag=${{ steps.repo-meta.outputs.last_tag }}" >> $GITHUB_OUTPUT
          fi

          if [[ "${{ steps.package-meta.outputs.package_last_tag_commit }}" != "${{ steps.repo-meta.outputs.last_tag_commit }}" ]]; then
            echo "commit_tag=${{ steps.repo-meta.outputs.last_commit}}" >> $GITHUB_OUTPUT
          fi
      

  push-release:
    if: ${{needs.extract-meta.outputs.last_tag}}
    needs: extract-meta
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout stac-browser repo
        id: checkout
        uses: actions/checkout@v4
        with:
          repository: ${{env.STAC_BROWSER_REPO}}
          ref: ${{needs.extract-meta.outputs.last_tag}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.IMAGE_NAME}}
          context: git
          tags: |
            type=semver,pattern={{version}},value=${{steps.checkout.outputs.ref}}
          annotations: |
            org.opencontainers.image.title=${{ env.PACKAGE_NAME }}
            org.opencontainers.image.revision=${{steps.checkout.outputs.commit}}
            org.opencontainers.image.source=https://github.com/${{env.STAC_BROWSER_REPO}}
          labels: |
            org.opencontainers.image.title=${{ env.PACKAGE_NAME }}
            org.opencontainers.image.revision=${{steps.checkout.outputs.commit}}
            org.opencontainers.image.source=https://github.com/${{env.STAC_BROWSER_REPO}}
  
      - name: Push image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: pathPrefix=/browser/
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          annotations: ${{steps.meta.outputs.annotations}}
          cache-from: type=gha
          cache-to: type=gha,mode=max  
    
  push-edge:
    if: ${{needs.extract-meta.outputs.last_commit}}
    needs: extract-meta
    permissions:
      packages: write
      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout stac-browser repo
        id: checkout
        uses: actions/checkout@v4
        with:
          repository: ${{env.STAC_BROWSER_REPO}}
          ref: ${{needs.extract-meta.outputs.last_commit}}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.IMAGE_NAME}}
          context: git
          tags: |
            type=edge
          annotations: |
            org.opencontainers.image.revision=${{steps.checkout.outputs.commit}}
            org.opencontainers.image.source=https://github.com/${{env.STAC_BROWSER_REPO}}
            org.opencontainers.image.title=${{ env.PACKAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{steps.checkout.outputs.commit}}
            org.opencontainers.image.source=https://github.com/${{env.STAC_BROWSER_REPO}}
            org.opencontainers.image.title=${{ env.PACKAGE_NAME }}

      - name: Build and push image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: pathPrefix=/browser/
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          annotations: ${{steps.meta.outputs.annotations}}
          cache-from: type=gha
          cache-to: type=gha,mode=max  

